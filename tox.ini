[tox]
envlist = py39,py310,py311,py312,lint,type-check
isolated_build = true

[testenv]
# Use uv for package management
runner = uv-venv-runner
# Install dependencies via uv
deps = 
    pytest>=7.0
    pytest-cov>=4.0
# Install the package itself in editable mode with uv
commands_pre =
    uv pip install -e .
commands = 
    pytest tests/ -v --cov=helm_values_manager --cov-report=xml --cov-report=term
setenv =
    FORCE_COLOR = 0
    NO_COLOR = 1
    TERM = dumb

# Python version specific environments
[testenv:py3.9]
basepython = python3.9

[testenv:py3.10]
basepython = python3.10

[testenv:py3.11]
basepython = python3.11

[testenv:py3.12]
basepython = python3.12

[testenv:lint]
runner = uv-venv-runner
deps =
    ruff>=0.1.0
commands =
    ruff check .
    ruff format --check .

[testenv:type-check]
runner = uv-venv-runner
deps =
    mypy>=1.0
    types-PyYAML
    types-setuptools
commands_pre =
    uv pip install -e .
commands =
    mypy helm_values_manager --ignore-missing-imports

[testenv:integration]
runner = uv-venv-runner
deps = 
    pytest>=7.0
commands_pre =
    uv pip install -e .
commands =
    pytest tests/test_integration.py -v
setenv =
    FORCE_COLOR = 0
    NO_COLOR = 1
    TERM = dumb

[testenv:docs]
deps =
    mkdocs
    mkdocs-material
commands =
    mkdocs build --strict

[coverage:run]
source = helm_values_manager
omit = 
    */tests/*
    */venv/*
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod