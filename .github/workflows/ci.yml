name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        exclude:
          # Skip some combinations to reduce CI time
          - os: macos-latest
            python-version: "3.8"
          - os: macos-latest
            python-version: "3.9"
          - os: windows-latest
            python-version: "3.8"
          - os: windows-latest
            python-version: "3.9"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "0.5.14"

    - name: Install dependencies
      run: |
        uv sync --all-extras --dev

    - name: Run unit tests
      run: |
        uv run pytest tests/ -v --cov=helm_values_manager --cov-report=xml --cov-report=term

    - name: Run integration tests
      run: |
        uv run pytest tests/test_integration.py -v

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-py${{ matrix.python-version }}
        path: |
          coverage.xml
          htmlcov/
        retention-days: 30

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "0.5.14"

    - name: Install dependencies
      run: |
        uv sync --all-extras --dev

    - name: Run ruff check
      run: |
        uv run ruff check .

    - name: Run ruff format check
      run: |
        uv run ruff format --check .

    - name: Run mypy
      run: |
        uv run mypy helm_values_manager --ignore-missing-imports || true

  plugin-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: 'v3.15.0'

    - name: Test Helm plugin installation
      run: |
        helm plugin install .
        helm values-manager --version
        helm plugin uninstall values-manager